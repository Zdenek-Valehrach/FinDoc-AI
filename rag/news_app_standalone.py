import streamlit as st
from newsapi_client import TechNewsRAG

"""
Samostatn√° Streamlit aplikace pro testov√°n√≠ dotaz≈Ø.
Poskytuje stejnou funkcionalitu jako v hlavn√≠ aplikaci, 
ale m≈Ø≈æe b√Ωt spu≈°tƒõna nez√°visle pro rychlej≈°√≠ v√Ωvoj a testov√°n√≠.

Spu≈°tƒõn√≠: streamlit run rag/news_app_standalone.py
"""

# Konfigurace aplikace
st.set_page_config(page_title="Tech News Analyz√°tor", layout="wide")
st.title("üîç Anal√Ωza technologick√Ωch novinek")

# Inicializace RAG syst√©mu
try:
    rag = TechNewsRAG()
    st.success("‚úÖ Syst√©m √∫spƒõ≈°nƒõ inicializov√°n!")
except Exception as e:
    st.error(f"‚ùå Chyba p≈ôi inicializaci: {str(e)}")
    st.stop()

# Hlavn√≠ funkcionalita
query = st.text_input("Zadejte dotaz v p≈ôirozen√©m jazyce:", "")

if st.button("Analyzovat"):
    with st.spinner("üîç Vyhled√°v√°m relevantn√≠ ƒçl√°nky a generuji odpovƒõƒè..."):
        try:
            # Z√≠sk√°n√≠ odpovƒõdi a v√Ωsledk≈Ø vyhled√°v√°n√≠
            answer, results = rag.query(query)
            
            st.markdown("---")
            st.subheader("üìù V√Ωsledky anal√Ωzy")
            st.markdown(answer)
            
            # Zobrazen√≠ zdrojov√Ωch ƒçl√°nk≈Ø
            st.markdown("---")
            st.subheader("üì∞ Zdrojov√© ƒçl√°nky")
            
            if results and len(results['documents']) > 0:
                for doc, meta in zip(results['documents'][0], results['metadatas'][0]):
                    with st.expander(doc.split("\n")[0]):
                        st.markdown(f"**Zdroj:** {meta['source']}")
                        st.markdown(f"**Datum:** {meta['date']}")
                        st.markdown(f"**URL:** {meta['url']}")
            else:
                st.warning("Nebyly nalezeny ≈æ√°dn√© relevantn√≠ ƒçl√°nky.")
                
        except Exception as e:
            st.error(f"‚ùå Chyba p≈ôi zpracov√°n√≠: {str(e)}")
